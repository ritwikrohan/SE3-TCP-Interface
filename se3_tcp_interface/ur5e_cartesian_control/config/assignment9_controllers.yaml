controller_manager:
  ros__parameters:
    update_rate: 500 

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    scaled_joint_trajectory_controller:
      type: ur_controllers/ScaledJointTrajectoryController

    tool_sensor_pose_broadcaster:
      type: pose_broadcaster/PoseBroadcaster

    target_sensor_pose_broadcaster:
      type: pose_broadcaster/PoseBroadcaster

    cartesian_motion_controller:
      type: assignment9_controller/CartesianMotionController

tool_sensor_pose_broadcaster:
  ros__parameters:
      frame_id: sensor_frame 
      pose_name: tool_sensor
      tf.enable: true
      tf.child_frame_id: tool_sensor_pose

target_sensor_pose_broadcaster:
  ros__parameters:
      frame_id: sensor_frame 
      pose_name: target_sensor
      tf.enable: true 
      tf.child_frame_id: target_sensor_pose

cartesian_motion_controller:
   ros__parameters:
      joints:
         - shoulder_pan_joint
         - shoulder_lift_joint
         - elbow_joint
         - wrist_1_joint
         - wrist_2_joint
         - wrist_3_joint
      robot_base_link: base
      end_effector_link: flange
      sensor_link: sensor_frame
      sensor_poses:                   # Cartesian motion controller needs current and target states so both are required for it to work
         tool_pose_name: tool_sensor
         target_pose_name: target_sensor
      tool_link: tool_frame
      interface_name: velocity

scaled_joint_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    speed_scaling_interface_name: ""
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.2
      goal_time: 0.0
      shoulder_pan_joint: { trajectory: 0.2, goal: 0.1 }
      shoulder_lift_joint: { trajectory: 0.2, goal: 0.1 }
      elbow_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_1_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_2_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_3_joint: { trajectory: 0.2, goal: 0.1 }